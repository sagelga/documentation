import{_ as s,o as n,c as a,e}from"./app.76739b9c.js";const o={},t=e(`<h1 id="session" tabindex="-1"><a class="header-anchor" href="#session" aria-hidden="true">#</a> Session</h1><p>The project is using <code>express-session</code> as a middleware for session management.</p><h2 id="initializing-session" tabindex="-1"><a class="header-anchor" href="#initializing-session" aria-hidden="true">#</a> Initializing Session</h2><p>Assuming you are in the root directory, with <code>express()</code> or <code>express.Router()</code> defined as <code>app</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// import global variables (change the path as needed)</span>
<span class="token keyword">const</span> globalVars <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./globalVars&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// import express-session</span>
<span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express-session&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// use the session middleware</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span>globalVars<span class="token punctuation">.</span>sessionOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-session" tabindex="-1"><a class="header-anchor" href="#using-session" aria-hidden="true">#</a> Using Session</h2><p>Using session requires the <code>req</code> object. You can access the <code>session</code> object via <code>req.session</code>. You can then alter the <code>session</code> object as a normal object.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// create a new &#39;hello&#39; key in the session,</span>
<span class="token comment">// with the value &#39;Sawasdee&#39;</span>
req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>hello <span class="token operator">=</span> <span class="token string">&quot;Sawasdee&quot;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>hello<span class="token punctuation">)</span> <span class="token comment">// &gt; &quot;Sawasdee&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),i=[t];function c(p,l){return n(),a("div",null,i)}var u=s(o,[["render",c],["__file","index.html.vue"]]);export{u as default};
