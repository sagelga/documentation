import{_ as e,o as t,c as o,e as s}from"./app.76739b9c.js";const i={},r=s('<h1 id="how-it-works" tabindex="-1"><a class="header-anchor" href="#how-it-works" aria-hidden="true">#</a> How it works</h1><p>This page will show you how the approval workflow works in real time. We still recommends you to read the code in <code>approvalProcess()</code> function.</p><h2 id="how-the-script-works" tabindex="-1"><a class="header-anchor" href="#how-the-script-works" aria-hidden="true">#</a> How the script works</h2><ol><li>Script will runs from Row n+1 (n = number of header row)</li><li>Checks the <code>Step 1 Approver Status</code> of the current row <ol><li>If it is <code>blank</code>, it will identifies as <code>New Request</code> and start the <code>New Request</code> process. Then repeats (2) with next row.</li><li>If it is <code>Waiting</code>, it will checks the <code>Inbound</code> sheet data that holds the same Request ID and updates the corresponding status when there is a response. Then repeats (2) with next row.</li><li>If the Status is <code>Approved</code>, the process repeats (2). But with <code>Step 2 Approver Status</code> and <code>Request Step 2 Approval</code>.</li><li>Otherwise (as in case of <code>Reject</code> or <code>Skipped</code>), script will repeats (2) with next row.</li></ol></li><li>When the status has reached to the last approver, (2) will starts again. But this time for <code>Approved</code>, it will sends an email to responder to do what the approver wants to do. Then the status will be updated as <code>Finished</code>.</li></ol><h2 id="system-process" tabindex="-1"><a class="header-anchor" href="#system-process" aria-hidden="true">#</a> System Process</h2><h3 id="new-request" tabindex="-1"><a class="header-anchor" href="#new-request" aria-hidden="true">#</a> New Request</h3><p>Script will do as following to requests that has been tagged as <code>New Request</code>.</p><ol><li>Send email to requester to notifies that the request is being processed.</li><li>Send email to <code>Step 1 Approver</code>, as determined by the requester.</li></ol><h3 id="checking-the-inbounds" tabindex="-1"><a class="header-anchor" href="#checking-the-inbounds" aria-hidden="true">#</a> Checking the inbounds</h3><p>Script will do as following to request that has been tagged as <code>Check for inbounds</code>.</p><ol><li>Retrives the <code>Reqest ID</code> from the request.</li><li>Match <code>Request ID</code> with <code>Request ID</code> in inbounds. First response (order by Time) that contains the same <code>Request ID</code> will be chosen.</li><li>Chosen Response status are applied to the request.</li></ol>',11),a=[r];function d(h,c){return t(),o("div",null,a)}var l=e(i,[["render",d],["__file","index.html.vue"]]);export{l as default};
